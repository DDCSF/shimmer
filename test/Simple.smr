

-- Identity function function.
@id x   = x;
-- +test   = %test-exp %simple-id
-- (@id #nat-5) #nat-3;


-- Duplicate a value.
@dup = \x. x x;
+test   = %test-exp %simple-dup
 (@dup %x) (%x %x);


-- Apply a higher order function twice.
 @twice f x = f (f x);
 +test   = %test-exp %simple-twice
  (@twice (#nat-add #nat'1) #nat'5) #nat'7;


-- Compute the factorial of a number.
@fac x
 = #if  (#nat-eq x #nat'0)
        (#nat'1)
        (#nat-mul x (@fac (#nat-sub x #nat'1)));


-- Compute the factorial of a number, using an accumulator.
@fac-acc x
 = @fac-acc-loop #nat'1 x;

@fac-acc-loop acc x
 = #if  (#nat-eq x #nat'0)
         acc
         (@fac-acc-loop (#nat-mul x acc) (#nat-sub x #nat'1));

@iterate f x n
 = #if  (#nat-eq n #nat'0)
         x
         (@iterate f (f x) (#nat-sub n #nat'1));

@prop-id
 = %all (\a. %impl a a);

@prop-xm
 = %all (\p. %or p (%not p));

@prop-mt
 = %all (\p q. %impl (%and (%impl p q) (%not q)) (%not p));

